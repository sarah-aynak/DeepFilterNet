name: Test DF

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["publish-pypi-wheels"]
    branches: [main]
    types:
      - completed
  schedule:
    - cron: '0 18 * * 0'

jobs:
  test-df-output:
    if: "!contains(github.event.head_commit.message, 'v*[0-9]+.[0-9]+.[0-9]+')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        include:
          - os: "windows-latest"
            extra: "-E soundfile"  # Soundfile backend for torchaudio
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Rust cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('.github/workflows/test_df.yml') }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with: {profile: "minimal", toolchain: "stable"}
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'
      - name: Load cached Poetry installation
        if: matrix.os != 'windows-latest'
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ matrix.python }}-${{ matrix.pytorch }}-${{ hashFiles('.github/workflows/test_df.yml') }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install runtime dependencies and DeepFilterNet
        working-directory: DeepFilterNet
        run: |
          poetry install --no-interaction -E eval ${{matrix.extra}}
          poetry run poe install-torch-cpu
      - name: Install Octave
        if: matrix.os == 'ubuntu-latest'
        run: |
          poetry install --no-interaction -E semetrics ${{matrix.extra}}
          sudo apt-get update && sudo apt-get install --no-install-recommends octave
      - name: Run DF Test
        working-directory: DeepFilterNet
        run: |
          source $VENV
          python df/scripts/test_df.py
