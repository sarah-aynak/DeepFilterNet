[tool.poetry]
name = "DeepFilterNet"
version = "0.2.3"
description = "Noise supression using deep filtering"
authors = ["Hendrik SchrÃ¶ter"]
repository = "https://github.com/Rikorose/DeepFilterNet"
keywords = ["noise reduction", "neural network"]
classifiers = [
  "Topic :: Multimedia :: Sound/Audio :: Speech",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Utilities",
  "Programming Language :: Rust",
  "Programming Language :: Python",
]
license = "MIT"
packages = [{ include = "df" }]
include = [
  { path = "pretrained_models/DeepFilterNet/config.ini" },
  { path = "pretrained_models/DeepFilterNet/checkpoints/*" },
  { path = "pretrained_models/DeepFilterNet2/config.ini" },
  { path = "pretrained_models/DeepFilterNet2/checkpoints/*" },
]

[tool.poetry.dependencies]
deepfilterlib = "0.2.3"
deepfilterdataloader = { version = "0.2.3", optional = true }
python = ">=3.7,<4.0"
typing_extensions = "^4.0"
numpy = ">=1.20,<2.0"
loguru = ">=0.5"
soundfile = { version = "^0.10", optional = true }
icecream = { version = ">=2,<3", optional = true }
pystoi = { version = "^0.3", optional = true }
pesq = { version = "^0.0.3", optional = true }
scipy = { version = "^1", optional = true }
requests = { version = "^2.27", optional = true }
appdirs = { version = "^1.4", optional = true }
onnxruntime = { version = "^1.11", optional = true }

[tool.poetry.extras]
train = ["deepfilterdataloader", "icecream"]
eval = ["pystoi", "pesq", "scipy"]
soundfile = ["soundfile"]
dnsmos = ["requests"]
dnsmos-local = ["appdirs", "onnxruntime", "requests"]

[tool.poetry.scripts]
deepFilter = "df.enhance:run"

[tool.poetry.dev-dependencies]
poethepoet = "^0.11"
pre-commit = "^2.17"

[tool.poe.tasks]
install-torch-cuda11 = "python -m pip install torch==1.11.0 torchaudio==0.11.0 --extra-index-url https://download.pytorch.org/whl/cu113/"
install-torch-cpu = "python -m pip install torch==1.11.0 torchaudio==0.11.0 --extra-index-url https://download.pytorch.org/whl/cpu/"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["df", "libdf", "libdfdata"]
